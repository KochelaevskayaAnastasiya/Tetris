@page
@model tetris.Pages.FiguresModel
@{
    ViewData["Title"] = "Фигуры";
    var someint = 0;
}
<body>
    <h1>Фигуры</h1>
    <form method="POST" onsubmit="">
        <div class="block_1">
            <button id="back" onclick="buttonBack()">Назад</button>
            <div class="figure">
                <canvas width="128" height="128" id="figure" class="figure"></canvas>
                <label id="kkk"></label>
                <script>
                    function drow_figure_chac(fig)
                    {
                        context.clearRect(0, 0, canvas.width, canvas.height);
                        if (@someint < @Model.figure_count) {
                            drow_figure(fig);
                        }
                        else {
                            drow_figure_empty();
                        }
                    }
                    function drow_figure(fig) // no ';' here
                    {
                        for (let row = 0; row < 4; row++) {
                            for (let col = 0; col < 4; col++) {
                                if (fig[row * 4 + col] == '1') {

                                    context.fillRect(col * grid, row * grid, grid - 1, grid - 1);

                                }
                                else {
                                    context.lineWidth = 0.5;
                                    context.strokeRect(col * grid, row * grid, grid - 1, grid - 1);
                                }
                            }
                        }

                    }

                    function drow_figure_empty() {
                        for (let row = 0; row < 4; row++) {
                            for (let col = 0; col < 4; col++) {
                                context.lineWidth = 0.5;
                                context.strokeRect(col * grid, row * grid, grid - 1, grid - 1);
                            }
                        }
                    }

                    const canvas = document.getElementById('figure');
                    const context = canvas.getContext('2d');
                    const grid = 32;
                    context.fillStyle = '#000000'; //для линий
                    context.strokeStyle = 'rgba(0,0,0,1)'; //для закрашенных фигур
                    let str = `@Model.figures[someint].Structure`;

                    let l2 = '@String.Join(",",Model.fig_str)';
                    let figu = l2.split(',');
                    let elem2 = document.getElementById('kkk');
                    let k = 0;

                    elem2.innerHTML = figu[k];


                    drow_figure_chac(figu[k]);

                    function buttonFor3()
                    {
                        elem2.innerHTML = figu[k];

                        k++;
                        drow_figure_chac(figu[k]);

                    }
                </script>
            </div>
            <button id="for" onclick="buttonFor()">Вперед</button>
            <label id="kkk">@someint</label>
            <label id="ddffff">@Model.figure_count</label>
            <label>@Model.figures.Count</label>
            <input onclick="buttonFor3()" type="button" value="eue" id="myButton1">

            <label id="12"></label>
            <label id="22"></label>
            <label id="33"></label>

        </div>
    </form>
</body>